generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String   @id @default(uuid())
  firstName        String   @map("first_name")
  lastName         String   @map("last_name")
  email            String   @unique
  password         String
  birthDate        DateTime @map("birth_date")
  userAddressId    String   @map("user_address_id")
  userPreferenceId String   @map("user_preference_id")
  createdAt        DateTime @default(now()) @map("created_at")
  updatedAt        DateTime @updatedAt @map("updated_at")

  Address     UserAddress    @relation(fields: [userAddressId], references: [id])
  Preferences UserPreference @relation(fields: [userPreferenceId], references: [id])
  ToDos       ToDo[]

  @@map("users")
}

model UserAddress {
  id        String   @id @default(uuid())
  city      String
  state     String
  country   String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  User User[]

  @@map("user_addresses")
}

model UserPreference {
  id        String   @id @default(uuid())
  theme     String   @default("default")
  language  String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  User User[]

  @@map("user_preferences")
}

model ToDo {
  id          String   @id @default(uuid())
  title       String
  description String?
  completed   Boolean  @default(false)
  date        DateTime @default(now())
  userId      String   @map("user_id")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  User User @relation(fields: [userId], references: [id], onUpdate: Cascade, onDelete: Cascade)

  @@map("todos")
}
